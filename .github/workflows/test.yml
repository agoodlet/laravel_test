name: MCA Deployment

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        type: choice
        description: Which INSTANCEs would you like to deploy to
        options:
          - Beta
          - Production
          - Seychelles
          - Test
          - All

jobs:
  build:
    concurrency:
      group: mca-deployment
    runs-on: [self-hosted, Linux, cd]
    # environment: "Production MCA"

    steps:
      - uses: actions/checkout@v2

      - name: build
        run: composer install; yarn && yarn build;

      - name: Copy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOSTNAME }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./*"
          target: "${{ secrets.WORKING_DIRECTORY }}/Core"

      - name: ssh and unpack
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOSTNAME }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd '${{ secrets.WORKING_DIRECTORY}}'

            # if we already have an unpacked build we want to get rid of it
            # perhaps we should be mv ./Core ./Core_old instead
            if [ -d ./Core ]; then rm -rf '${{ secrets.WORKING_DIRECTORY }}/Core'; fi

            # unpack build
            tar xvf Core.tar

            # depending on the INSTANCE input we want to do different stuff here
            COMMAND="/root/create_or_update_mca_INSTANCE.php -m update"
            INSTANCE="${{ github.event.inputs.INSTANCE }}"

            # get users from their groups
            PRODUCTION_USERS="$(getent group production | awk -F ':' '{print $4}')"
            TEST_USERS="$(getent group test | awk -F ':' '{print $4}')"
            NO_UPDATE="$(getent group no-update | awk -F ':' '{print $4}')"

            case "${INSTANCE}" in
              # if INSTANCE = all we dont' need to filter
              "All")
                ;;
              # if INSTANCE = production -u prod_users
              "Production")
                COMMAND="${COMMAND} -u ${PRODUCTION_USERS}";;
              # if INSTANCE = beta -e prod_users
              "Beta")
                COMMAND="${COMMAND} -e ${PRODUCTION_USERS},${TEST_USERS},${NO_UPDATE}";;
              # if INSTANCE = seychelles -u seychelles
              "Seychelles")
                COMMAND="${COMMAND} -u scmercurybilling";;
              # if INSTANCE = test -u dveale,demomercury,agoodlet
              "Test")
                COMMAND="${COMMAND} -u ${TEST_USERS}";;
            esac

            # execute the COMMAND
            # eval "${COMMAND}"
            echo "${COMMAND}"
