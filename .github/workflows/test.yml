# This is a basic workflow to help you get started with Actions

name: MCA Deployment

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      instance:
        type: choice
        description: Which instances would you like to deploy to
        options:
          - Beta
          - Production
          - Seychelles
          - Test
          - All

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, linux, ARM64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: build mercury
        run: |
          tar -cvf build.tar ./*

      - name: Copy to server
        run: scp -P ${{ secrets.MCA_SSH_PORT }} build.tar ${{ secrets.MCA_SSH_USERNAME }}@${{ secrets.MCA_SSH_HOSTNAME }}:${{ secrets.MCA_WORKING_DIRECTORY }}

      - name: ssh and unpack
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.MCA_SSH_HOSTNAME }}
          username: ${{ secrets.MCA_SSH_USERNAME }}
          key: ${{ secrets.MCA_SSH_PRIVATE_KEY }}
          port: ${{ secrets.MCA_SSH_PORT }}
          script: |
            set -e
            cd '${{ secrets.MCA_WORKING_DIRECTORY}}'
            # if we already have an unpacked build we want to get rid of it
            # perhaps we should be mv ./build ./build_old instead
            if [ -d ./build ]; then rm -rf '${{ secrets.MCA_WORKING_DIRECTORY }}/build'; fi
            # unpack build
            tar xvf build.tar
            # depending on the instance input we want to do different stuff here
            command="/root/create_or_update_mca_instance.php -m update"
            instance="${{ github.event.inputs.instance }}"
            production_users="$(getent group production | awk -F ':' '{print $4}')"
            test_users="$(getent group test | awk -F ':' '{print $4}')"

            case "$instance" in
              # if instance = all we dont' need to filter
              "All")
                ;;
              # if instance = production -u prod_users
              "Production")
                command="$command -u $production_users";;
              # if instance = beta -e prod_users
              "Beta")
                command="$command -e $production_users";;
              # if instance = seychelles -u seychelles
              "Seychelles")
                command="$command -u scmercurybilling";;
              # if instance = test -u dveale,demomercury,agoodlet
              "Test")
                command="$command -u $test_users";;
            esac

            # execute the command
            # eval "$command"
            echo "$command"
